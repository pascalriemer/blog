FROM node:18-alpine AS deps
RUN apk add --no-cache libc6-compat
WORKDIR /app

# Install pnpm
RUN npm install -g pnpm

# Copy package files
COPY package.json pnpm-lock.yaml* .npmrc* ./

# Install dependencies with special flags
RUN pnpm install --frozen-lockfile

# Builder stage
FROM node:18-alpine AS builder
WORKDIR /app

# Install pnpm
RUN npm install -g pnpm

# Copy dependency files and install
COPY --from=deps /app/node_modules ./node_modules
COPY --from=deps /app/.npmrc ./
COPY . .

# Create public directory if it doesn't exist
RUN mkdir -p public

# Build the application
RUN pnpm build

# Final stage
FROM node:18-alpine AS runner
WORKDIR /app

# Set environment variables
ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1
ENV HOSTNAME="0.0.0.0"

# Create non-root user for better security
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

# CRITICAL: Copy the static directory - this is required for Next.js to serve assets properly
COPY --from=builder /app/.next/static ./.next/static

# Copy other necessary files
COPY --from=builder /app/public ./public
COPY --from=builder /app/next.config.js ./
COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./

# Set proper directory permissions
RUN chmod 755 ./.next/static -R
RUN chown -R nextjs:nodejs ./

# Expose port 3000
EXPOSE 3000

# Switch to non-root user
USER nextjs

# Start the server
CMD ["node", "server.js"] 